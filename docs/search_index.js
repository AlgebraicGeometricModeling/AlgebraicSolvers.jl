var documenterSearchIndex = {"docs":
[{"location":"code/resultants/#Resultant-constructions","page":"Resultant constructions","title":"Resultant constructions","text":"","category":"section"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"Greedy implementation of the Canny-Emiris formula as it was presented in \"A Greedy Approach to the Canny-Emiris Formula\" with the introduction of type functions. The underlying system of equations is written as:","category":"page"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"F_i = sum_a in mathcalA_iu_iachi^a quad i = 0dotsn","category":"page"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"for some finite sets of supports mathcalA_i subset M in a lattice of rank n. This implementation treats the cases in which the Newton polytopes  Delta_i = conv(mathcalA_i) are zonotopes (sums of line segments) or products of simplices (which correspond to multihomogeneous systems of equations).","category":"page"},{"location":"code/resultants/#Zonotopes","page":"Resultant constructions","title":"Zonotopes","text":"","category":"section"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"Let v_1dotsv_n in M be independent vectors generating an n-zonotope. The supports of our zonotopes are: ","category":"page"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"mathcalA_i^ = big sum_j = 1^n lambda_j v_j in mathbbZ^n mid quad lambda_j in mathbbZ quad 0  leq lambda_j leq a_ijbig","category":"page"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"for some a_ij quad i = 0dotsn quad j = 1dotss. Let V be the n times n matrix whose columns are v_1dotsv_n and let A be the matrix whose entries are the a_ij.","category":"page"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"The function CannyEmiris.Zonotopes receives these two matrices and returns two symbolic matrices mathcalH_mathcalGmathcalE_mathcalG which correspond to the rational formula for the sparse resultant:","category":"page"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"Res_mathcalA = big(fracdet(mathcalH_mathcalG)det(mathcalE_mathcalG)big)^det(V)","category":"page"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"which follows from Theorem 1.1 and Corollary 3.1 on the text. ","category":"page"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"Moreover, the program prints the polynomials chi^b-a(b)F_i(b) corresponding to all the lattice points in the greedy subset b in mathcalG, the size of the matrix and the degree of the resultant (which corresponds to the lattice points in mixed cells).","category":"page"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"Let's see an example of the use of this function which corresponds to the system of Example 1.1 in the text.","category":"page"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"\njulia> Using AlgebraicSolvers\n\njulia> A = [[1,1] [1,1] [1,1]]\n2×3 Matrix{Int64}:\n 1  1  1\n 1  1  1\n\njulia> H = [[1,0] [0,1]]\n2×2 Matrix{Int64}:\n 1  0\n 0  1\n\njulia> CE, PM = CannyEmiris.Zonotopes(A,H)\nThe rows of the Canny-Emiris matrix x^{b-a(b)}F_{i(b)} are: \n[0, 1]-> x^[0, 1]*F_2\n[0, 2]-> x^[0, 1]*F_1\n[1, 0]-> x^[1, 0]*F_2\n[1, 1]-> x^[1, 1]*F_2\n[1, 2]-> x^[0, 1]*F_0\n[2, 0]-> x^[1, 0]*F_1\n[2, 1]-> x^[1, 0]*F_0\n[2, 2]-> x^[1, 1]*F_1\n\nThe size of the greedy Canny-Emiris matrix is: 8\nThe degree of the resultant is: 6\n\nThe sparse resultant is the ratio of the determinants of the returned matrices to the power 1.0\n\n\njulia> CE\n8×8 Matrix{SymPy.Sym}:\n (u_{2, [0, 0]})  (u_{2, [0, 1]})                0  (u_{2, [1, 0]})  (u_{2, [1, 1]})                0                0                0\n (u_{1, [0, 0]})  (u_{1, [0, 1]})                0  (u_{1, [1, 0]})  (u_{1, [1, 1]})                0                0                0\n               0                0  (u_{2, [0, 0]})  (u_{2, [0, 1]})                0  (u_{2, [1, 0]})  (u_{2, [1, 1]})                0\n               0                0                0  (u_{2, [0, 0]})  (u_{2, [0, 1]})                0  (u_{2, [1, 0]})  (u_{2, [1, 1]})\n (u_{0, [0, 0]})  (u_{0, [0, 1]})                0  (u_{0, [1, 0]})  (u_{0, [1, 1]})                0                0                0\n               0                0  (u_{1, [0, 0]})  (u_{1, [0, 1]})                0  (u_{1, [1, 0]})  (u_{1, [1, 1]})                0\n               0                0  (u_{0, [0, 0]})  (u_{0, [0, 1]})                0  (u_{0, [1, 0]})  (u_{0, [1, 1]})                0\n               0                0                0  (u_{1, [0, 0]})  (u_{1, [0, 1]})                0  (u_{1, [1, 0]})  (u_{1, [1, 1]})\n\njulia> PM\n2×2 Matrix{SymPy.Sym}:\n (u_{2, [0, 0]})  (u_{2, [1, 1]})\n (u_{1, [0, 0]})  (u_{1, [1, 1]})","category":"page"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"The program will return an error if i) the matrix A or H do not have the desired dimensions, ","category":"page"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"julia> A = [[1,1] [1,1]]\n2×2 Matrix{Int64}:\n 1  1\n 1  1\n\njulia> H\n2×2 Matrix{Int64}:\n 1  0\n 0  1\n\njulia> CE, PM = CannyEmiris.Zonotopes(A,H)\nThe matrix of the a_{i,j} does not have the correct dimensions\n(Dict{Any, Any}(), Dict{Any, Any}())","category":"page"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"ii) if H does not correspond to an n-zonotope","category":"page"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"julia> H = [[1,0] [0,0]]\n2×2 Matrix{Int64}:\n 1  0\n 0  0\n\njulia> CE, PM = CannyEmiris.Zonotopes(A,H)\nThe vectors do not correspond to an n-zonotope.\n(Dict{Any, Any}(), Dict{Any, Any}())","category":"page"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"or iii) entries of A are not ordered in the sense  0  a_0j leq a_1j leq dots leq a_n-1j quad j = 1dotsn:","category":"page"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"julia> A = [[2,1] [1,1] [1,1]]\n2×3 Matrix{Int64}:\n 2  1  1\n 1  1  1\n\njulia> H = [[1,0] [0,1]]\n2×2 Matrix{Int64}:\n 1  0\n 0  1\n\njulia> CE, PM = CannyEmiris.Zonotopes(A,H)\nThe matrix of the a_{i,j} does not satisfy a_{i-1,j} <= a_{i,j}\n(Dict{Any, Any}(), Dict{Any, Any}())","category":"page"},{"location":"code/resultants/#Multihomogeneous-systems","page":"Resultant constructions","title":"Multihomogeneous systems","text":"","category":"section"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"Let now N represent the vector of n1,...ns in a multihomogeneous system in mathbbP^n_1 times dots times mathbbP^n_s and let D be a matrix whose columns are the multidegrees of the polynomials of the system so that:","category":"page"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"mathcalA_i = big(b_jl)_l = 1dotss^j = 1dotsn_l in oplus_l=1^smathbbZ^n_l  b_jl geq 0 quad sum_j=0^n_lb_jl leq d_il  quad i = 0dotsn","category":"page"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"The function CannyEmiris.Multihomogeneous(D::Matrix,N::Vector) receives these two matrices D and N and returns and returns two symbolic matrices which are the Canny-Emiris matrix and its principal minor, as before. Let's show its use in the system corresponding to Example 4.1.","category":"page"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"julia> N = [2]\n1-element Vector{Int64}:\n 2\n\njulia> D = [2 2 1]\n1×3 Matrix{Int64}:\n 2  2  1\n\njulia> CE,PM = CannyEmiris.Multihomogeneous(D,N)\nThe rows of the Canny-Emiris matrix x^{b-a(b)}F_{i(b)} are: \n[2, 1]-> x^[2, 1]*F_2\n[3, 1]-> x^[3, 1]*F_2\n[1, 2]-> x^[1, 2]*F_2\n[2, 2]-> x^[2, 2]*F_2\n[1, 3]-> x^[1, 3]*F_2\n[4, 1]-> x^[2, 1]*F_1\n[3, 2]-> x^[1, 2]*F_1\n[2, 3]-> x^[2, 1]*F_0\n[1, 4]-> x^[1, 2]*F_0\n\nThe size of the greedy Canny-Emiris matrix is: 9\nThe degree of the resultant is: 8\n\n(SymPy.Sym[(u_{2, [0, 0]}) (u_{2, [1, 0]}) … 0 0; 0 (u_{2, [0, 0]}) … 0 0; … ; (u_{0, [0, 0]}) (u_{0, [1, 0]}) … (u_{0, [0, 2]}) 0; 0 0 … (u_{0, [1, 1]}) (u_{0, [0, 2]})], SymPy.Sym[(u_{2, \n[0, 0]});;])\n\njulia> CE\n9×9 Matrix{SymPy.Sym}:\n (u_{2, [0, 0]})  (u_{2, [1, 0]})                0  (u_{2, [0, 1]})                0                0                0                0                0\n               0  (u_{2, [0, 0]})                0                0                0  (u_{2, [1, 0]})  (u_{2, [0, 1]})                0                0\n               0                0  (u_{2, [0, 0]})  (u_{2, [1, 0]})  (u_{2, [0, 1]})                0                0                0                0\n               0                0                0  (u_{2, [0, 0]})                0                0  (u_{2, [1, 0]})  (u_{2, [0, 1]})                0\n               0                0                0                0  (u_{2, [0, 0]})                0                0  (u_{2, [1, 0]})  (u_{2, [0, 1]})\n (u_{1, [0, 0]})  (u_{1, [1, 0]})                0  (u_{1, [0, 1]})                0  (u_{1, [2, 0]})  (u_{1, [1, 1]})  (u_{1, [0, 2]})                0\n               0                0  (u_{1, [0, 0]})  (u_{1, [1, 0]})  (u_{1, [0, 1]})                0  (u_{1, [2, 0]})  (u_{1, [1, 1]})  (u_{1, [0, 2]})\n (u_{0, [0, 0]})  (u_{0, [1, 0]})                0  (u_{0, [0, 1]})                0  (u_{0, [2, 0]})  (u_{0, [1, 1]})  (u_{0, [0, 2]})                0\n               0                0  (u_{0, [0, 0]})  (u_{0, [1, 0]})  (u_{0, [0, 1]})                0  (u_{0, [2, 0]})  (u_{0, [1, 1]})  (u_{0, [0, 2]})\n\njulia> PM\n1×1 Matrix{SymPy.Sym}:\n (u_{2, [0, 0]})","category":"page"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"Again, this function will return nothing if the dimension conditions and the order. ","category":"page"},{"location":"code/resultants/#Other-functions-to-call","page":"Resultant constructions","title":"Other functions to call","text":"","category":"section"},{"location":"code/resultants/#MultihomogeneousEmbedding","page":"Resultant constructions","title":"MultihomogeneousEmbedding","text":"","category":"section"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"The function CannyEmiris.MultihomogeneousEmbedding(MULTI_A::Matrix{Int64}, MULTI_N::Vector{Int64}))  builds the embedding of the multihomogeneous system into a zonotope system. This system is given by the supports:","category":"page"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":" overlinemathcalA_i = big(b_jl)_l = 1dotss^j=1dotsn_l in oplus_j=1^smathbbZ^n_j    0 leq sum_j = J^n_lb_jl leq d_ijquad l = 1dotss quad J = 1dotsn_l","category":"page"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"\njulia> N = [2]\n1-element Vector{Int64}:\n 2\n\njulia> D = [2 2 1]\n1×3 Matrix{Int64}:\n 2  2  1\n\njulia> CannyEmiris.MultihomogeneousEmbedding(D,N)\n([2 2 1; 2 2 1], [1 -1; 0 1])\n ","category":"page"},{"location":"code/resultants/#GenerateTypeFunctions","page":"Resultant constructions","title":"GenerateTypeFunctions","text":"","category":"section"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"The function CannyEmiris.GenerateTypeFunctions(n::Int) constructs the iterator that produces all the type functions varphi1dotsn xrightarrow 0dotsn satisfying the condition on the greedy subset mathcalG:","category":"page"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"sum_i = 0^I-1 t_bi leq I quad forall I = 1dotsn where t_bi = varphi^-1(i)","category":"page"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"julia> p = CannyEmiris.GenerateTypeFunctions(2)\nMain.CannyEmiris.TypeFunctions{Vector{Int64}}([0, 1, 2], 2)\n\njulia> for x in p println(x) end\n[0, 1]\n[0, 2]\n[1, 0]\n[1, 1]\n[1, 2]\n[2, 0]\n[2, 1]\n[2, 2]\n ","category":"page"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"AlgebraicSolvers.CannyEmiris","category":"page"},{"location":"code/resultants/#AlgebraicSolvers.CannyEmiris","page":"Resultant constructions","title":"AlgebraicSolvers.CannyEmiris","text":"Module which provides optimised resultant constructions for multi-homogeneous systems.\n\n\n\n\n\n","category":"module"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"AlgebraicSolvers.CannyEmiris.Multihomogeneous","category":"page"},{"location":"code/resultants/#AlgebraicSolvers.CannyEmiris.Multihomogeneous","page":"Resultant constructions","title":"AlgebraicSolvers.CannyEmiris.Multihomogeneous","text":"Add some documentation: what are A, H, Coeff, ...\n\n\n\n\n\n","category":"function"},{"location":"code/resultants/","page":"Resultant constructions","title":"Resultant constructions","text":"AlgebraicSolvers.CannyEmiris.Zonotopes ","category":"page"},{"location":"code/resultants/#AlgebraicSolvers.CannyEmiris.Zonotopes","page":"Resultant constructions","title":"AlgebraicSolvers.CannyEmiris.Zonotopes","text":"Add some documentation: what are A, H, Coeff, ...\n\n\n\n\n\n","category":"function"},{"location":"code/functions/","page":"-","title":"-","text":"#Functions","category":"page"},{"location":"code/functions/","page":"-","title":"-","text":"AlgebraicSolvers.rel_error","category":"page"},{"location":"code/functions/#AlgebraicSolvers.rel_error","page":"-","title":"AlgebraicSolvers.rel_error","text":"Vector of relative errors of P at the points X\n\n\n\n\n\n","category":"function"},{"location":"code/functions/","page":"-","title":"-","text":"AlgebraicSolvers.alpha_beta","category":"page"},{"location":"code/functions/#AlgebraicSolvers.alpha_beta","page":"-","title":"AlgebraicSolvers.alpha_beta","text":"alpha, beta quantities for Newton convergence to an approximate zero.\n\nIf alpha < 0.125, then the approximate zero is withing 2*beta from Xi and Newton methods converges to it from Xi quadratically.\nIf alpha < 0.02, then Newton method converges from all points in the ball of center Xi and radius 2*beta.\n\n\n\n\n\n","category":"function"},{"location":"#AlgebraicSolvers","page":"Home","title":"AlgebraicSolvers","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Package for the solution of polynomial systems and resultants","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pages = map(file -> joinpath(\"code\", file), filter(x ->endswith(x, \"md\"), readdir(\"code\"))) ","category":"page"}]
}
